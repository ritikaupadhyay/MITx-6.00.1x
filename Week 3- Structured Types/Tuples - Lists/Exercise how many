#Consider the following sequence of expressions:

animals = { 'a': ['aardvark'], 'b': ['baboon'], 'c': ['coati']}
animals['d'] = ['donkey']
animals['d'].append('dog')
animals['d'].append('dingo')
# We want to write some simple procedures that work on dictionaries to return information.
#
# First, write a procedure, called how_many, which returns the sum of the number of values associated with a dictionary. For example:
#
# >>> print(how_many(animals))
# 6

def how_many(aDict):
    '''

    :param aDict: a dictionary where all values are lists
    :return: int, how many values are in the dictionary
    '''
    count = 0
    for key in aDict.keys(): #for each key in the dictionary
        count += len(aDict[key]) #add the length of the list held by that key

    return count



# This time, write a procedure, called biggest, which returns the key corresponding to the entry with the
# largest number of values associated with it. If there is more than one such entry, return any one of the matching keys.
#
# Example usage:
#
# >>> biggest(animals)
# 'd'

def biggest(aDict):
    '''

    :param aDict: dictionary with values that are lists
    :return: return the key associated with the largest list
    '''

    maximum = 0
    result = ''
    for key in aDict.keys():
        if len(aDict[key]) >= maximum:
            maximum = len(aDict[key])
            result = key

    return result




print("There is a total of ", how_many(animals), "values in the dictionary you entered.")
print("The key associated with the biggest list of values in the dictionary entered is ", biggest(animals))


